"use client";
import ImageView from "../../Components/ImageView";
import { LuArrowUpRight } from "react-icons/lu";
import SeekingFund from "../../Components/SeekingFund";
import { useRouter } from "next/navigation";
import { nexaflowPageObj } from "../../utils/constants";
import nexaflowApi from "../../services/nexaflow";
import { useState, useEffect } from "react";
import { Loader } from "../../Components/Loader";
import Link from "next/link";

const main = "/assets/images/main.png";
const groot = "/assets/images/groot.png";
const zap = "/assets/icons/zap.svg";
const check = "/assets/icons/Check_icon.svg";
const asset = "/assets/images/asset.png";
const govern = "/assets/images/community-governed.png";
const range = "/assets/images/range.png";
const pool = "/assets/images/pool.png";
const graph = "/assets/icons/graph.svg";
const climateEnvironmentCrisis =
  "/assets/images/climate-environment-crisis.png";
const mainBottomSection = "/assets/images/main-bottom-section.png";

export default function Main() {
  const router = useRouter();
  const [project, setProject] = useState();
  const [partners, setPartners] = useState([]);
  useEffect(() => {
    const getPageByID = async () => {
      const page = await nexaflowApi.getPageByID({
        pageId: nexaflowPageObj.projectsPage,
        websiteId: nexaflowPageObj.website,
      });
      const reversedProjects = [...page?.Projects].reverse();
      const hasOrder = page?.Projects.some(
        (project) => project.order !== undefined
      );
      let sortedProjects;
      if (hasOrder) {
        sortedProjects = reversedProjects.sort((a, b) => a.order - b.order);
      } else {
        sortedProjects = reversedProjects;
      }
      setProject(sortedProjects);
    };

    getPageByID();
  }, []);
  useEffect(() => {
    const getPageByID = async () => {
      const page = await nexaflowApi.getPageByID({
        pageId: nexaflowPageObj.landingPage,
        websiteId: nexaflowPageObj.website,
      });
      setPartners(page?.Partners);
    };

    getPageByID();
  }, []);
  const funding = [
    {
      balance: "$17k+",
      impact: "Treasury",
    },
    {
      balance: "93",
      impact: "Holders",
    },
    {
      balance: "5",
      impact: "Projects Funded",
    },
    {
      balance: "25%",
      impact: "APY",
    },
  ];
  const keys = [
    {
      title: "Mobilize",
      subTitle: "Capital",
      desc: "Incentivize and mobilize capital globally to allocate towards climate solutions.",
    },
    {
      title: "Value",
      subTitle: "Natural resources",
      desc: "Accurately value climate solutions and the positive externalities generated by them.",
    },
    {
      title: "Enable",
      subTitle: "Humanity",
      desc: "Use as a medium of exchange to build the solarpunk paradigm for the future.",
    },
  ];
  const services = [
    {
      title: `<p className="font-syne font-semibold text-[20px] text-center sm:text-left sm:text-[28px] text-[#EC8000]">
      Backed by Climate Solutions</p>`,
      description:
        "Each $EARTH is backed by a variety of on ground projects that are directly addressing the climate / environmental crisis while catering to humanities core needs",
      img: "/assets/images/asset.png",
    },
    {
      title: "Community Governed",
      description:
        "Monetary policy of $EARTH will be governed by Nodes of $EARTH with goal of achieving our mission/vision ",
      img: "/assets/images/community-governed.png",
    },
    {
      title: "Range Bound",
      description:
        "$EARTH is a new unit of value, not pegged to any currency. Designed to be loosely range bound, assets backing each token serve as the floor while valuing positive externalities created by those assets and the utility of the currency create a soft ceiling. ",
      img: "/assets/images/range.png",
    },
    {
      title: "Protocol Owned Liquidity",
      description:
        "Perpetual liquidity for you to swap your $EARTH for $DAI whenever you choose to irrespective of market conditions. This LP is owned by the treasury as a service to currency holders.",
      img: "/assets/images/pool.png",
    },
  ];
  const cardData = [
    {
      title: "What is $EARTH?",
      description: "Learn $EARTH mechanics",
      img: "/assets/images/card-bg.png",
      link: "/resources",
    },
    {
      title: "How $EARTH works",
      description: "Read about the tokenomics of $EARTH",
      img: "/assets/images/card-bg-2.png",
      link: "/works",
    },
    {
      title: "Buy $EARTH",
      description: "Trade on Uniswap",
      img: "/assets/images/card-bg-3.png",
      link: "/earth",
    },
    {
      title: "Become a node.",
      description: "Obtain rights to mint $Earth",
      img: "/assets/images/card-bg-4.png",
      link: "/community",
    },
  ];
  const features = [
    "Directly solving climate/environmental crisis",
    "Catering to our core needs",
    "Yield generating",
    "Building the solarpunk future",
  ];
  const socialIcons = [
    {
      icon: "/assets/icons/notion.svg",
    },
    {
      icon: "/assets/icons/slack.svg",
    },
    {
      icon: "/assets/icons/google_drive.svg",
    },

    {
      icon: "/assets/icons/intercom.svg",
    },
    {
      icon: "/assets/icons/jira.svg",
    },
    {
      icon: "/assets/icons/dropbox.svg",
    },
    {
      icon: "/assets/icons/stripe.svg",
    },
    {
      icon: "/assets/icons/zapier.svg",
    },
    {
      icon: "/assets/icons/figma.svg",
    },
    {
      icon: "/assets/icons/confluence.svg",
    },
    {
      icon: "/assets/icons/mailchimp.svg",
    },
    {
      icon: "/assets/icons/zendesk.svg",
    },
    {
      icon: "/assets/icons/g-calendar.svg",
    },
    {
      icon: "/assets/icons/whatsapp.svg",
    },
    {
      icon: "/assets/icons/discord.svg",
    },
    {
      icon: "/assets/icons/bitbucket.svg",
    },
  ];
  const updates = [
    {
      name: "Olivia Rhye • 20 Jan 2022",
      title: "UX review presentations",
      description:
        "How do you create compelling presentations that wow your colleagues and impress your managers?",
      img: "/assets/images/refi.png",
      link: true,
      tags: ["Design", "Research", "Presentation"],
    },
    {
      name: "Solarpunkmaxi • 19 Jan 2022",
      title: "What is solarpunk?",
      description:
        "Linear helps streamline software projects, sprints, tasks, and bug tracking. Here’s how to get...",
      img: "/assets/images/baker.png",
      tags: ["Design", "Research"],
    },
    {
      name: "TreegensDAO • 18 Jan 2022",
      title: "A new unit of value",
      description:
        "The rise of RESTful APIs has been met by a rise in tools for creating, testing, and manag...",
      img: "/assets/images/steiner.png",
      tags: ["Design", "Research"],
    },
    {
      name: "TreegensDAO • 18 Jan 2022",
      title: "Real world impact",
      description:
        "The rise of RESTful APIs has been met by a rise in tools for creating, testing, and manag...",
      img: "/assets/images/real-world.png",
      tags: ["Design", "Research"],
    },
  ];
  return (
    <div className="mt-20">
      {" "}
      <ImageView
        src={main}
        alt="main"
        width={600}
        height={600}
        className="w-full object-cover"
      />
      <div className="max-w-screen-2xl mx-auto px-4 sm:px-[6%] mt-16 h-fit flex flex-col gap-12 items-center justify-center w-full">
        <div className="flex sm:flex-row flex-col pb-10 justify-center items-center w-full">
          {funding.map((impact, index) => (
            <div
              className={`flex flex-col px-2 py-4 sm:py-0 items-center  justify-center w-[16rem] ${
                index !== funding.length - 1
                  ? " border-b-2 sm:border-b-0 sm:border-r-2 border-[#EAECF0]"
                  : ""
              }`}
              key={index}
            >
              <p className="font-syne font-semibold text-[20px] text-center sm:text-[52px] text-[#EC8000]">
                {impact.balance}
              </p>
              <p className="text-[#101828] text-center text-[16px]  font-medium font-inter">
                {impact.impact}
              </p>
            </div>
          ))}
        </div>
        <div className="flex sm:px-[20%] items-center pt-10 px-4 flex-col w-full gap-3">
          <div className="text-[#101828] flex font-semibold text-center text-[24px] sm:text-[34px] leading-[42px] font-syne">
            Here to make anthropogenic climate change history & seeding the
            {/* <ImageView
              src={solar}
              alt="hightlight"
              width={30}
              height={30}
              className="w-8 h-8"
            />{" "} */}
            paradigm
          </div>
        </div>
        <div className="grid w-full grid-cols-1 mt-28 items-center sm:grid-cols-2 gap-8">
          {cardData?.map((data, index) => (
            <div
              className="relative w-full grow cursor-pointer"
              key={index}
              onClick={() => router.push(data?.link)}
            >
              <ImageView
                src={data?.img}
                alt="main"
                width={600}
                height={600}
                className="rounded-xl w-full h-[14rem]  object-cover"
              />
              <Link
                href={data.link}
                className="flex flex-col w-full absolute p-[2rem] pb-[4rem] sm:p-[3rem] top-[0rem]"
              >
                <div className="flex justify-between items-center">
                  <p
                    className={`text-white  font-syne font-semibold text-[26px]`}
                  >
                    {data?.title}
                  </p>
                  <LuArrowUpRight size={22} color="#fff" />
                </div>
                <p className="text-white font-inter mt-2  font-normal text-[16px]">
                  {data?.description}
                </p>
              </Link>
            </div>
          ))}
        </div>
        {/* <div className="flex gap-x-[32px] py-[55px]">
          {keys.map((data) => (
            <div
              key={data.title}
              className="flex flex-col items-center border border-lightestGray pt-[40px] rounded-[16px] shadow-cardShadow"
            >
              <h1 className="text-[20px] font-inter font-semibold text-darkGray">
                {data.title}
              </h1>
              <h2 className="text-[16px] font-inter font-noemal text-lightGray">
                {data.subTitle}
              </h2>
              <p className="text-[18px] text-center p-[32px] font-inter font-noemal text-lightGray">
                {data.desc}
              </p>
            </div>
          ))}
        </div> */}
        <div className="flex flex-col mt-3 gap-8">
          <div className="flex flex-col shadow gap-4 sm:flex-row p-10 items-center sm:items-start justify-between border-2 border-[#EAECF0] rounded-lg">
            <div className="flex flex-col w-full sm:w-[60%] justify-center items-center sm:items-start ">
              <p className="font-syne font-semibold text-[20px] text-center sm:text-left sm:text-[28px] text-black">
                Backed by{" "}
                <span className="text-[#EC8000]"> Climate Solutions</span>
              </p>
              <p className="text-[#475467]  text-center sm:text-left text-[16px]  font-normal font-inter">
                Each $EARTH is backed by a variety of on ground projects that
                are directly addressing the climate / environmental crisis while
                catering to humanities core needs
              </p>
            </div>
            <ImageView
              src={asset}
              alt="service"
              width={600}
              height={300}
              className={` w-48 h-44 object-contain `}
            />
          </div>
          <div className="flex flex-col shadow gap-4 sm:flex-row p-10 items-center sm:items-start justify-between border-2 border-[#EAECF0] rounded-lg">
            <div className="flex flex-col w-full sm:w-[60%] justify-center items-center sm:items-start ">
              <p className="font-syne font-semibold text-[20px] text-center sm:text-left sm:text-[28px] text-[#EC8000]">
                Community
                <span className="text-black"> Governed</span>
              </p>
              <p className="text-[#475467]  text-center sm:text-left text-[16px]  font-normal font-inter">
                Monetary policy of $EARTH will be governed by Nodes of $EARTH
                with goal of achieving our mission/vision
              </p>
            </div>
            <ImageView
              src={govern}
              alt="service"
              width={600}
              height={300}
              className={` w-48 h-44 object-contain `}
            />
          </div>
          <div className="flex flex-col shadow gap-4 sm:flex-row p-10 items-center sm:items-start justify-between border-2 border-[#EAECF0] rounded-lg">
            <div className="flex flex-col w-full sm:w-[60%] justify-center items-center sm:items-start ">
              <p className="font-syne font-semibold text-[20px] text-center sm:text-left sm:text-[28px] text-[#EC8000]">
                Range
                <span className="text-black"> Bound</span>
              </p>
              <p className="text-[#475467]  text-center sm:text-left text-[16px]  font-normal font-inter">
                $EARTH is a new unit of value, not pegged to any currency.
                Designed to be loosely range bound, assets backing each token
                serve as the floor while valuing positive externalities created
                by those assets and the utility of the currency create a soft
                ceiling.
              </p>
            </div>
            <ImageView
              src={range}
              alt="service"
              width={600}
              height={300}
              className={` w-48 h-44 object-contain `}
            />
          </div>
          <div className="flex flex-col shadow gap-4 sm:flex-row p-10 items-center sm:items-start justify-between border-2 border-[#EAECF0] rounded-lg">
            <div className="flex flex-col w-full sm:w-[60%] justify-center items-center sm:items-start ">
              <p className="font-syne font-semibold text-[20px] text-center sm:text-left sm:text-[28px] text-black ">
                Protocol Owned
                <span className="text-[#EC8000]"> Liquidity</span>
              </p>
              <p className="text-[#475467]  text-center sm:text-left text-[16px]  font-normal font-inter">
                Perpetual liquidity for you to swap your $EARTH for $DAI
                whenever you choose to irrespective of market conditions. This
                LP is owned by the treasury as a service to currency holders.
              </p>
            </div>
            <ImageView
              src={pool}
              alt="service"
              width={600}
              height={300}
              className={` w-48 h-44 object-contain `}
            />
          </div>
        </div>
        <div className="flex flex-col mt-28 gap-4 items-center">
          <p className="text-[#EC8000] font-semibold text-center text-[14px] font-inter">
            Projects
          </p>
          <p className="text-[#101828] font-semibold text-center text-[30px] sm:text-[40px] font-syne">
            Borderless, capital efficient funnel mobilizing climate finance
          </p>
          <p className="text-[#475467] text-center font-normal   text-[16px] font-inter">
            Verified projects that are eligible to seek funding from $EARTH
            treasury.
          </p>
        </div>
      </div>
      <ImageView
        src={climateEnvironmentCrisis}
        className="py-[30px] mt-8 w-full"
        alt="check"
        width={1440}
        height={2709}
      />
      <div
        className={`my-16 max-w-screen-2xl  mx-auto pl-[6%] hide-scrollbar overflow-x-auto `}
      >
        <div className="flex flex-col w-full sm:flex-row justify-between lg:gap-[1rem] xl:gap-[15rem] 2xl:gap-[25rem]">
          <div className="flex justify-center min-w-[30rem] w-[30rem] flex-col gap-2">
            <ImageView src={graph} alt="graph" width={50} height={50} />
            <p className="text-[#101828] font-semibold text-left text-[20px] sm:text-[28px] font-syne">
              Climate Solutions backing $Earth
            </p>
            <p className="text-[#475467] text-left font-normal  text-[14px] font-inter">
              For projects building infrastructure for a net zero future
            </p>
            <div className="flex pl-4 flex-col my-4 gap-4">
              {features?.map((feature, i) => (
                <div className="flex gap-2" key={i}>
                  <ImageView src={check} alt="check" width={20} height={20} />
                  <p className="text-[#475467] text-left font-normal  text-[14px] font-inter">
                    {feature}
                  </p>
                </div>
              ))}
            </div>
          </div>
          <div className="ml-auto flex gap-8">
            {project && project.length ? (
              project?.map((data, index) => (
                <div
                  className="rounded-lg border-4 w-[40rem] h-fit overflow-hidden cursor-pointer   flex flex-col border-[#101828]"
                  key={index}
                  onClick={() => router.push(`/projects/${data.projectId}`)}
                >
                  <div className="justify-center items-center flex flex-col px-3 sm:px-6">
                    <div className="flex w-full justify-center pt-3 sm:pt-6 gap-2 items-center">
                      <ImageView
                        src={data.icon}
                        alt="avatar"
                        width={50}
                        height={50}
                      />
                      <p className="text-black font-inter font-semibold text-[16px]">
                        {data.subText}
                      </p>
                    </div>
                    <p className="pt-1 sm:pt-2 font-syne text-center font-semibold text-[20px] sm:text-[24px] text-black">
                      {data.projectName}
                    </p>
                    <p className="pt-1 sm:pt-2 font-inter font-semibold text-[12px] text-[#EC8000]">
                      {data.category}
                    </p>
                    <p className="py-1 sm:py-2 h-[3.5rem] font-inter text-center font-normal text-[13px] text-black">
                      {data.subtitle}
                    </p>
                  </div>
                  <div className="flex border-t-2 mt-4 w-full border-[#EAECF0]">
                    <div className="flex items-center px-1 grow pt-2 pb-4 border-r-2 border-[#EAECF0] justify-center flex-col">
                      <p className="font-syne font-semibold text-center text-[18px] sm:text-[30px] text-[#EC8000]">
                        {data.projectValue}
                      </p>
                      <p className="font-inter font-semibold text-center text-[12px]  sm:text-[14px] text-[#101828]">
                        Total project value
                      </p>
                    </div>
                    <div className="flex items-center  px-1 py-2 pb-3 grow border-r-2 border-[#EAECF0] justify-center flex-col">
                      <p className="font-syne font-semibold text-[18px] text-center sm:text-[30px] text-[#EC8000]">
                        {data.fundingNeeded}
                      </p>
                      <p className="font-inter font-semibold text-center text-[12px]  sm:text-[14px] text-[#101828]">
                        Funding needed
                      </p>
                    </div>
                    <div className="flex items-center py-2 pb-3 px-1  grow justify-center flex-col">
                      <p className="font-syne font-semibold text-[18px] text-center sm:text-[30px] text-[#EC8000]">
                        {data.Irr}
                      </p>
                      <p className="font-inter font-semibold text-center text-[12px]  sm:text-[14px] text-[#101828]">
                        Internal rate of return
                      </p>
                    </div>
                  </div>
                  <ImageView
                    src={data.coverPic}
                    alt="coverpic"
                    width={350}
                    height={480}
                    className="w-full object-cover rounded-b-sm"
                  />
                </div>
              ))
            ) : (
              <div className="w-[50%] h-[30vh] flex items-center justify-center">
                <Loader />
              </div>
            )}
          </div>
        </div>
      </div>
      <div className="max-w-screen-2xl pt-16 mx-auto px-4 sm:px-[6%]  h-fit flex flex-col gap-12 items-center justify-center w-full">
        <div className="flex flex-col gap-2 items-center">
          <p className="text-[#EC8000] font-semibold text-center text-[14px] font-inter">
            Partners
          </p>
          <p className="text-[#101828] font-semibold text-center text-[30px] sm:text-[40px] font-syne">
            Agents of Change
          </p>
          <p className="text-[#475467] text-center font-normal  text-[16px] font-inter">
            Projects collaborating with $EARTH to fulfil its mission/vision
          </p>
        </div>
        <div className="flex flex-wrap  sm:px-[32%] justify-center mt-6 gap-1 sm:gap-5">
          {partners && partners?.length ? (
            partners.map((partner, index) => (
              <Link href={partner?.link} className="cursor-pointer" key={index}>
                <ImageView
                  alt="social"
                  src={partner.icon}
                  width={60}
                  height={60}
                />
              </Link>
            ))
          ) : (
            <div className="w-full h-[6rem]">
              <Loader />
            </div>
          )}
        </div>
        <button className="w-fit  text-white font-inter flex h-10 items-center justify-center rounded-md bg-[#EC8000] p-2 text-sm">
          View Partners
        </button>
      </div>
      <div>
        <ImageView
          alt="social"
          src={mainBottomSection}
          width={1440}
          height={430}
          className="w-full h-[30rem] object-cover mt-20"
        />
      </div>
      <div className="max-w-screen-2xl pt-16 mx-auto px-4 sm:px-[6%]  h-fit flex flex-col gap-12 items-center justify-center w-full">
        <div className="flex flex-col gap-2 items-center">
          <p className="text-[#EC8000] font-semibold text-center text-[14px] font-inter">
            News
          </p>
          <p className="text-[#101828] font-semibold text-center text-[30px] sm:text-[40px] font-syne">
            Latest updates
          </p>
          <p className="text-[#475467] text-center font-normal  text-[16px] font-inter">
            Stay updated with the latest progress on $Earth
          </p>
        </div>
        <div className="grid grid-cols-1 sm:grid-cols-2 mt-8 gap-x-6 gap-y-3 px-[112px]">
          {updates.map((card, index) => (
            <div
              className={`flex cursor-pointer items-start ${
                index === 0
                  ? "col-span-1 sm:col-span-1 flex-col row-span-1 sm:row-span-3"
                  : "col-span-1 flex-row sm:col-span-1 "
              }`}
              key={index}
            >
              <ImageView
                src={card.img}
                alt={card.name}
                width={200}
                height={200}
                className={`${
                  index === 0
                    ? "w-full h-[20rem] object-cover"
                    : "w-full h-40 sm:w-full object-cover"
                }`}
              />
              <div
                className={`${
                  index === 0 ? "mt-4" : "flex flex-col gap-2 px-4"
                }`}
              >
                <p className="text-[#EC8000] font-inter font-semibold text-[12px]">
                  {card?.name}
                </p>
                <div className="flex mt-2 justify-between items-start">
                  <p
                    className={`text-[#101828] font-inter font-semibold text-[16px] ${
                      index === 0 ? "font-syne text-[22px]" : ""
                    }`}
                  >
                    {card?.title}
                  </p>
                  {card?.link && <LuArrowUpRight size={22} color="#101828" />}
                </div>
                <p
                  className={`text-[#475467] ${
                    index === 0 ? "mt-2" : ""
                  } font-inter w-[90%] font-normal text-[14px]`}
                >
                  {card?.description}
                </p>
                <div
                  className={`flex items-center ${
                    index === 0 ? "mt-4" : "mt-2"
                  }  gap-2`}
                >
                  {card?.tags.map((tag, i) => (
                    <p
                      className={`rounded-full flex py-[2px] px-2 font-inter text-[12px] font-medium ${
                        tag === "Design"
                          ? "text-[#EC8000] bg-[#FFFCF8]"
                          : tag === "Research"
                          ? "bg-[#EEF4FF] text-[#3538CD]"
                          : tag === "Presentation"
                          ? "bg-[#FDF2FA] text-[#C11574]"
                          : ""
                      }`}
                      key={i}
                    >
                      {tag}
                    </p>
                  ))}
                </div>
              </div>
            </div>
          ))}
        </div>

        <div className="relative mt-0 sm:mt-28 sm:mb-8 w-full">
          <ImageView
            src={groot}
            alt="groot"
            width={1216}
            height={350}
            className="w-full h-[300px] rounded-lg object-cover"
          />
          <div className="flex flex-col w-full justify-end items-center p-4 absolute bottom-[1.5rem]">
            <p className="text-white font-inter text-center mt-3 font-medium text-[18px]">
              Still have questions?
            </p>
            <p className="text-white font-inter text-center mt-1 font-light text-[16px]">
              Can’t find the answer you’re looking for? Please drop a message to
              our team.
            </p>
            <button className="w-[100px] mt-4 text-white font-inter flex h-10 items-center justify-center rounded-md bg-[#EC8000] p-2 cursor-pointer text-sm">
              $Earth GPT
            </button>
          </div>
        </div>
      </div>
    </div>
  );
}
