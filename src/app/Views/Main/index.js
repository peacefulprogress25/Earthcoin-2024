"use client";
import ImageView from "../../Components/ImageView";
import { LuArrowUpRight } from "react-icons/lu";
import SeekingFund from "../../Components/SeekingFund";
import { useRouter } from "next/navigation";
import { nexaflowPageObj } from "../../utils/constants";
import nexaflowApi from "../../services/nexaflow";
import { useState, useEffect } from "react";
import { Loader } from "../../Components/Loader";
import Link from "next/link";
import Video from "../../Components/Video";
import ProjectDetails from "./ProjectDetails";

import Nodes from "./Nodes";
import Features from "./Features";
import Projects from "./Projects";
import TradeDapp from "../../Components/Trade";
import buttonConfig from "../../utils/button";
import { Swiper, SwiperSlide } from "swiper/react";
import { Autoplay, EffectFade } from "swiper/modules";
import { getTreasury, totalEarth } from "../Dapp/balance";

const earth = "/assets/video/EarthVideo.mp4";
const earthnodevdo = "/assets/video/home_earthnode.mp4";
const earthHome = "/assets/images/earth-home.png";
const earthNode = "/assets/images/earthnode-home.png";
//const groot = "/assets/images/faq.png";
const groot = "/assets/images/faqnew.png";
const zap = "/assets/icons/zap.svg";
const check = "/assets/icons/Check_icon.svg";
const asset = "/assets/images/Climatesolutions.png";
const govern = "/assets/images/Communitygoverned.png";
const range = "/assets/images/Rangebound.png";
const pool = "/assets/images/Liquiditypool.png";
const highlight = "/assets/images/highlightText.png";
const graph = "/assets/icons/graph.svg";
const climateEnvironmentCrisis = "/assets/images/climate-environment.png";
const mainBottomSection = "/assets/images/main-bottom-section.png";
const mainBottomSection2 = "/assets/images/main-bottom-section2.png";

export default function Main() {
  const router = useRouter();
  const [partners, setPartners] = useState([]);
  const [updates, setUpdates] = useState([]);
  const [funding, setFunding] = useState([]);
  const [treasuryValue, setTreasuryValue] = useState('')

  useEffect(() => {
    const getPageByID = async () => {
      const page = await nexaflowApi.getPageByID({
        pageId: nexaflowPageObj.landingPage,
        websiteId: nexaflowPageObj.website,
      });
      setPartners(page?.Partners);
      setUpdates(page?.Updates);
      setFunding(page?.Stats);
      const data = await getTreasury();
      setTreasuryValue(data?.treasury)
    };

    getPageByID();
  }, []);



  const keys = [
    {
      title: "Mobilize",
      subTitle: "Capital",
      desc: "Incentivize and mobilize capital globally to allocate towards climate solutions.",
    },
    {
      title: "Value",
      subTitle: "Natural resources",
      desc: "Accurately value climate solutions and the positive externalities generated by them.",
    },
    {
      title: "Enable",
      subTitle: "Humanity",
      desc: "Use as a medium of exchange to build the solarpunk paradigm for the future.",
    },
  ];
  const services = [
    {
      title: `<p className="font-syne font-semibold text-[20px] text-center sm:text-left sm:text-[28px] text-[#EC8000]">
      Backed by Climate Solutions</p>`,
      description:
        "Each $EARTH is backed by a variety of on ground projects that are directly addressing the climate / environmental crisis while catering to humanities core needs",
      img: "/assets/images/asset.png",
    },
    {
      title: "Community Governed",
      description:
        "Monetary policy of $EARTH will be governed by Nodes of $EARTH with goal of achieving our mission/vision ",
      img: "/assets/images/community-governed.png",
    },
    {
      title: "Range Bound",
      description:
        "$EARTH is a new unit of value, not pegged to any currency. Designed to be loosely range bound, assets backing each token serve as the floor while valuing positive externalities created by those assets and the utility of the currency create a soft ceiling. ",
      img: "/assets/images/range.png",
    },
    {
      title: "Protocol Owned Liquidity",
      description:
        "Perpetual liquidity for you to swap your $EARTH for $DAI whenever you choose to irrespective of market conditions. This LP is owned by the treasury as a service to currency holders.",
      img: "/assets/images/pool.png",
    },
  ];
  const cardData = [
    {
      title: "What is $EARTH?",
      description: "Learn more about the digital currency",
      img: "/assets/images/Card1.png",
      link: "/resources",
    },
    {
      title: "How $EARTH works",
      description: "Read about the mechanics and flow of $EARTH",
      img: "/assets/images/Card2.png",
      link: "/works",
    },
    {
      title: "Buy $EARTH",
      description: "Trade on Uniswap",
      img: "/assets/images/Card3.png",
      link: "/earth",
    },
    {
      title: "Become an $EARTH NODE.",
      description: "Learn about how to become a node",
      img: "/assets/images/Card4.png",
      link: "/earthnode",
    },
  ];
  const features = [
    "Directly solving climate/environmental crisis",
    "Catering to our core needs",
    "Yield generating",
    "Building the solarpunk future",
  ];
  const social = [
    {
      image: "/assets/images/telegram.png",
      buttonLink: buttonConfig.social_home_telegram.link,
      external: buttonConfig.social_home_telegram.external,
    },
    {
      image: "/assets/images/twitter.png",
      buttonLink: buttonConfig.social_home_twitter.link,
      external: buttonConfig.social_home_twitter.external,
    },
    {
      image: "/assets/images/discord.png",
      buttonLink: buttonConfig.social_home_discord.link,
      external: buttonConfig.social_home_discord.external,
    },
    {
      image: "/assets/images/Mask.png",
      buttonLink: buttonConfig.social_home_farcaster.link,
      external: buttonConfig.social_home_farcaster.external,
    },
    // {
    //   image: "/assets/images/cloud.png",
    //   buttonLink: buttonConfig.social_home_lens.link,
    //   external: buttonConfig.social_home_lens.external,
    // },
    {
      image: "/assets/images/instagram.png",
      buttonLink: buttonConfig.social_home_instagram.link,
      external: buttonConfig.social_home_instagram.external,
    },
    {
      image: "/assets/images/linkedin.png",
      buttonLink: buttonConfig.social_home_linkedin.link,
      external: buttonConfig.social_home_linkedin.external,
    },
  ];
  const socialIcons = [
    {
      icon: "/assets/icons/notion.svg",
    },
    {
      icon: "/assets/icons/slack.svg",
    },
    {
      icon: "/assets/icons/google_drive.svg",
    },

    {
      icon: "/assets/icons/intercom.svg",
    },
    {
      icon: "/assets/icons/jira.svg",
    },
    {
      icon: "/assets/icons/dropbox.svg",
    },
    {
      icon: "/assets/icons/stripe.svg",
    },
    {
      icon: "/assets/icons/zapier.svg",
    },
    {
      icon: "/assets/icons/figma.svg",
    },
    {
      icon: "/assets/icons/confluence.svg",
    },
    {
      icon: "/assets/icons/mailchimp.svg",
    },
    {
      icon: "/assets/icons/zendesk.svg",
    },
    {
      icon: "/assets/icons/g-calendar.svg",
    },
    {
      icon: "/assets/icons/whatsapp.svg",
    },
    {
      icon: "/assets/icons/discord.svg",
    },
    {
      icon: "/assets/icons/bitbucket.svg",
    },
  ];
  // const updates = [
  //   {
  //     name: "Olivia Rhye • 20 Jan 2022",
  //     title: "UX review presentations",
  //     description:
  //       "How do you create compelling presentations that wow your colleagues and impress your managers?",
  //     img: "/assets/images/refi.png",
  //     link: true,
  //     tags: ["Design", "Research", "Presentation"],
  //   },
  //   {
  //     name: "Solarpunkmaxi • 19 Jan 2022",
  //     title: "What is solarpunk?",
  //     description:
  //       "Linear helps streamline software projects, sprints, tasks, and bug tracking. Here’s how to get...",
  //     img: "/assets/images/baker.png",
  //     tags: ["Design", "Research"],
  //   },
  //   {
  //     name: "TreegensDAO • 18 Jan 2022",
  //     title: "A new unit of value",
  //     description:
  //       "The rise of RESTful APIs has been met by a rise in tools for creating, testing, and manag...",
  //     img: "/assets/images/steiner.png",
  //     tags: ["Design", "Research"],
  //   },
  //   {
  //     name: "TreegensDAO • 18 Jan 2022",
  //     title: "Real world impact",
  //     description:
  //       "The rise of RESTful APIs has been met by a rise in tools for creating, testing, and manag...",
  //     img: "/assets/images/real-world.png",
  //     tags: ["Design", "Research"],
  //   },
  // ];
  return (
    <div className="mt-20 ">
      <div className="relative">
        <ImageView
          src={earthHome}
          alt="earthcoin"
          width={500}
          height={500}
          className="object-cover w-full h-full"
        />

        <div className="absolute inset-0 flex flex-col items-center justify-center px-4 text-center">
          <p className="text-[#000000] text-lg sm:text-3xl md:text-[40px] lg:text-[50px] xl:text-[60px] font-syne font-medium leading-tight lg:leading-[1.1] xl:leading-[1.2] 2xl:leading-[1.3]">
            Programming money to
          </p>
          <Swiper
            modules={[Autoplay, EffectFade]}
            className='w-full mySwiper !h-fit mb-8'
            fadeEffect={{ crossFade: true }}
            effect='fade'
            spaceBetween={100}
            loop={true}
            autoplay={{
              delay: 3000,
              disableOnInteraction: false,
            }}
          >
            <SwiperSlide>
              <p className="text-[#000000] text-lg sm:text-3xl md:text-[40px] lg:text-[50px] xl:text-[60px] font-syne font-medium leading-tight  lg:leading-[1.1] xl:leading-[1.2] 2xl:leading-[1.3]">
                reward climate finance
              </p>
            </SwiperSlide>
            <SwiperSlide>
              <p className="text-[#000000] text-lg sm:text-3xl md:text-[40px] lg:text-[50px] xl:text-[60px] font-syne font-medium leading-tight  lg:leading-[1.1] xl:leading-[1.2] 2xl:leading-[1.3]">
                make regeneration a reality
              </p>
            </SwiperSlide>
            <SwiperSlide>
              <p className="text-[#000000] text-lg sm:text-3xl md:text-[40px] lg:text-[50px] xl:text-[60px] font-syne font-medium leading-tight  lg:leading-[1.1] xl:leading-[1.2] 2xl:leading-[1.3]">
                build the solarpunk paradigm
              </p>
            </SwiperSlide>
          </Swiper>

          <p className="xl:text-[30px] lg:text-[25px] md:text-xl mt-2 md:mt-3 xl:mt-0  text-[10px]  font-inter">Reserve currency for #Refi</p>
          <button className="text-white mt-4 sm:mt-8 font-inter font-semibold px-2 py-1 sm:px-4 sm:py-2 rounded-md bg-[#101323] border border-[#EC8000] text-[8px] sm:text-base">
            <Link
              href={buttonConfig?.home_get_earth?.link || ""}
              target={
                buttonConfig?.home_get_earth?.external ? "_blank" : "_self"
              }
            >
              {buttonConfig?.home_get_earth?.title}
            </Link>
          </button>
        </div>
      </div>
      <div className="mx-auto  pt-2 mt-[2rem] sm:mt-[4rem] xl:mt-[6rem] px-4 sm:px-[6%] 2xl:px-0 mt-16 h-fit flex flex-col items-center justify-center w-full">
        <div className="flex flex-col items-center justify-center w-full pb-2 sm:flex-row">
          {funding && funding.length ? funding.map((impact, index) => (
            <div
              className={`flex flex-col px-2 py-4 sm:py-0 items-center  justify-center w-[16rem] ${index !== funding.length - 1
                ? " border-b-2 sm:border-b-0 sm:border-r-2 border-[#EAECF0]"
                : ""
                }`}
              key={index}
            >
              <p className="font-syne font-semibold text-[20px] text-center md:text-[35px] lg:text-[52px] text-[#EC8000]">
                {index === 0 ? treasuryValue : impact.balance}
              </p>
              <p className="text-[#101828] text-center text-[16px]  font-medium font-inter">
                {impact.title}
              </p>
            </div>
          )) : null}
        </div>

        <div className="mt-[2rem] sm:mt-[4rem] xl:mt-[6rem]">
          <p className="leading-10 text-[#000000] text-[20px] md:text-[25px] lg:text-[30px] xl:text-[35px] font-syne w-full text-center font-semibold">
            {/* Just ONE transaction to get Rewarded for */}
            Internet money to real infrastructure in ONE transaction 
            {/* <span className="text-[#EC8000]"> Climate Action</span> */}
          </p>
        </div>

        <Video
          src={earthnodevdo}
          className={`object-cover w-full h-full   block`}
        />

        {/* <ImageView
          src={earthNode}œœ
          alt='earthcoin'
          width={500}
          height={500}
          className='object-cover w-full h-full'
        /> */}

        {/* <div className="flex gap-x-[32px] py-[55px]">
          {keys.map((data) => (
            <div
              key={data.title}
              className="flex flex-col items-center border border-lightestGray pt-[40px] rounded-[16px] shadow-cardShadow"
            >
              <h1 className="text-[20px] font-inter font-semibold text-darkGray">
                {data.title}
              </h1>
              <h2 className="text-[16px] font-inter font-noemal text-lightGray">
                {data.subTitle}
              </h2>
              <p className="text-[18px] text-center p-[32px] font-inter font-noemal text-lightGray">
                {data.desc}
              </p>
            </div>
          ))}
        </div> */}
        {/* <p className="text-[#000000] mt-5 text-[20px] md:text-[25px] lg:text-[30px] xl:text-[35px] font-syne w-full text-center font-semibold">
          What is $EARTH?
        </p> */}
        {/* <Features /> */}

        <div className="relative w-full mb-[2rem] sm:mb-[4rem] xl:mb-[6rem] -mt-10 sm:pt-16">
          <ImageView
            alt="social"
            src={mainBottomSection2}
            width={1440}
            height={430}
            className="w-full rounded-lg xl:h-[24rem] object-contain xl:object-cover mt-20"
          />
          <div className="absolute top-2/3 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-[#FFFFFF] font-syne text-center flex items-center justify-center">
            {/* <p className="font-bold whitespace-normal text-[18px] xs:whitespace-nowrap sm:text-[24px] md:text-[27px] lg:text-[40px] xl:text-[44px] leading-tight"> */}
              {/* $EARTH for EARTH {" "} */}
              {/* <br /> */}
              {/* <p className=" sm:line-clamp-3  break-words  text-center  font-normal text-[14px] sm:text-[18px] md:text-[20px] lg:text-[24px] xl:text-[28px]">
                Fusing real world income from physical assets and on chain demand for the digital asset to deliver truly yummy yields.

              </p> */}
            {/* </p> */}
          </div>

        </div>

        <Projects />
        <Nodes />
        {/* <div className='flex flex-col gap-8 mt-3'>
          <div className='flex flex-col shadow gap-4 sm:flex-row p-5 items-center sm:items-start justify-between border-2 border-[#EAECF0] rounded-lg'>
            <div className='flex flex-col w-full sm:w-[60%] p-10 justify-center items-center sm:items-start '>
              <p className='font-syne font-semibold text-[20px] text-center sm:text-left sm:text-[28px] text-black'>
                Backed by{" "}
                <span className='text-[#EC8000]'> Climate Solutions</span>
              </p>
              <p className='text-[#475467]  text-center sm:text-left text-[16px] py-5 font-normal font-inter'>
                Each $EARTH is backed by a variety of on ground projects that
                are directly addressing the climate / environmental crisis while
                catering to humanities core needs
              </p>
            </div>
            <div className='p-5'>
              <ImageView
                src={asset}
                alt='service'
                width={600}
                height={300}
                className={` w-48 h-44 object-contain `}
              />
            </div>
          </div>
          <div className='flex flex-col shadow gap-4 sm:flex-row p-5 items-center sm:items-start justify-between border-2 border-[#EAECF0] rounded-lg'>
            <div className='flex flex-col w-full sm:w-[60%] justify-center p-10 items-center sm:items-start '>
              <p className='font-syne font-semibold text-[20px] text-center sm:text-left sm:text-[28px] text-[#EC8000]'>
                Community
                <span className='text-black'> Governed</span>
              </p>
              <p className='text-[#475467]  text-center sm:text-left text-[16px] py-5  font-normal font-inter'>
                Monetary policy of $EARTH will be governed by Nodes of $EARTH
                with goal of achieving our mission/vision
              </p>
            </div>
            <div className='p-5'>
              <ImageView
                src={govern}
                alt='service'
                width={600}
                height={300}
                className={` w-48 h-44 object-contain `}
              />
            </div>
          </div>
          <div className='flex flex-col shadow gap-4 sm:flex-row p-5 items-center sm:items-start justify-between border-2 border-[#EAECF0] rounded-lg'>
            <div className='flex flex-col w-full sm:w-[60%] justify-center p-10 items-center sm:items-start '>
              <p className='font-syne font-semibold text-[20px] text-center sm:text-left sm:text-[28px] text-[#EC8000]'>
                Range
                <span className='text-black'> Bound</span>
              </p>
              <p className='text-[#475467]  text-center sm:text-left text-[16px] py-5  font-normal font-inter'>
                $EARTH is a new unit of value, not pegged to any currency.
                Designed to be loosely range bound, assets backing each token
                serve as the floor while valuing positive externalities created
                by those assets and the utility of the currency create a soft
                ceiling.
              </p>
            </div>
            <div className='p-5'>
              <ImageView
                src={range}
                alt='service'
                width={600}
                height={300}
                className={` w-48 h-44 object-contain `}
              />
            </div>
          </div>
          <div className='flex flex-col shadow gap-4 sm:flex-row p-5 items-center sm:items-start justify-between border-2 border-[#EAECF0] rounded-lg'>
            <div className='flex flex-col w-full sm:w-[60%] justify-center p-10 items-center sm:items-start '>
              <p className='font-syne font-semibold text-[20px] text-center sm:text-left sm:text-[28px] text-black '>
                Protocol Owned
                <span className='text-[#EC8000]'> Liquidity</span>
              </p>
              <p className='text-[#475467]  text-center sm:text-left text-[16px] py-5  font-normal font-inter'>
                Perpetual liquidity for you to swap your $EARTH for $DAI
                whenever you choose to irrespective of market conditions. This
                LP is owned by the treasury as a service to currency holders.
              </p>
            </div>
            <div className='p-5'>
              <ImageView
                src={pool}
                alt='service'
                width={600}
                height={300}
                className={` w-48 h-44 object-contain `}
              />
            </div>
          </div>
        </div> */}
      </div>

      <div>
        {/* <div className='max-w-screen-2xl pt-16 mx-auto px-4 sm:px-[6%]  h-fit flex flex-col gap-12 items-center justify-center w-full'>
          <div className='flex items-center flex-col w-[80%] px-20 mt-28 gap-4 '>
            <p className='text-[#EC8000] font-semibold text-center text-[14px] font-inter'>
              What is $EARTH
            </p>
            <p className='text-[#101828] font-semibold text-center text-[30px] sm:text-[40px] font-syne'>
              Borderless, capital efficient funnel mobilizing climate finance
            </p>
            <p className='text-[#475467] text-center font-normal   text-[16px] font-inter'>
              Giving the power to anyone, anywhere in the world to fund climate
              action via $EARTH
            </p>
          </div>
        </div>
        <ImageView
          src={climateEnvironmentCrisis}
          className='py-[30px] mt-8 w-full'
          alt='check'
          width={1440}
          height={2709}
        /> */}
      </div>
      {/* <Treasury /> */}

      <div className="max-w-screen-2xl pt-16 mx-auto px-4 sm:px-[6%] 2xl:px-0 flex flex-col gap-12 items-center justify-start w-full">
        <div className="flex flex-col items-center gap-2">
          <p className="text-[#EC8000] font-semibold text-center text-[14px] font-inter">
            Partners
          </p>
          <p className="text-[#101828] font-semibold text-center text-[30px] sm:text-[40px] font-syne">
            Agents of Change
          </p>
          <p className="text-[#475467] text-center font-normal  text-[16px] font-inter">
            Projects collaborating with $Earth to fulfil its mission/vision
          </p>
        </div>
        <div className="flex flex-wrap sm:px-[25%] justify-center mt-0 gap-3 sm:gap-7">
          {partners && partners?.length ? (
            partners.map((partner, index) => (
              <Link href={partner?.link} target="_blank" className="cursor-pointer" key={index}>
                <ImageView
                  alt="social"
                  src={partner.icon}
                  width={60}
                  height={60}
                />
              </Link>
            ))
          ) : (
            <div className="w-full h-[6rem]">
              <Loader />
            </div>
          )}
        </div>
        {/* <button className='w-fit  text-white font-inter flex h-10 items-center justify-center rounded-md bg-[#EC8000] p-2 text-sm'>
        <Link
              href={buttonConfig?.home_partners?.link || ""}
              target={buttonConfig?.home_partners?.external ? "_blank" : "_self"}
            >
              {buttonConfig?.home_partners?.title}
            </Link>
        </button> */}
      </div>
      <div className=" relative max-w-screen-2xl pt-2 mx-auto px-4 sm:px-[6%] 2xl:px-0 ">
        <ImageView
          alt="social"
          src={mainBottomSection}
          width={1440}
          height={430}
          className="w-full rounded-lg h-[24rem] object-cover mt-12"
        />
        <div className="absolute top-[58%] left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-[#FFFFFF] text-[14px] sm:text-[25px] md:text-[28px] lg:text-[34px] xl:text-[35px] font-syne text-center font-semibold flex items-center justify-center">
          <p className="whitespace-normal sm:whitespace-nowrap">
            We do not inherit this world from our parents{" "}
            <br />
            We borrow it from our children <br />
            Let&apos;s leave it better than we found it
          </p>
        </div>
      </div>
      <div className="max-w-screen-2xl pt-16 mx-auto px-4 sm:px-[6%] 2xl:px-0  h-fit flex flex-col gap-12 items-center justify-center w-full">
        <div className="flex flex-col items-center gap-2">
          <p className="text-[#EC8000] font-semibold text-center text-[14px] font-inter">
            News
          </p>
          <p className="text-[#101828] font-semibold text-center text-[30px] sm:text-[40px] font-syne">
            Latest updates
          </p>
          <p className="text-[#475467] text-center font-normal  text-[16px] font-inter">
            Stay updated with the latest progress on $Earth
          </p>
        </div>
      </div>
      <div className="grid w-full grid-cols-1 px-4 mt-8 sm:px-20 2xl:px-0 xl:grid-cols-2 gap-x-6 gap-y-5">
        {updates && updates?.length
          ? updates.map((card, index) => (
            <div
              className={`flex cursor-pointer w-full items-start ${index === 0
                ? "col-span-1 sm:col-span-1 flex-col row-span-1 sm:row-span-3"
                : "col-span-1  sm:col-span-1 flex-col sm:flex-row"
                }`}
              key={index}
            >
              <ImageView
                src={card.image}
                onClick={() => window.open(card?.link, "_blank")}
                alt={card.name}
                width={200}
                height={200}
                className={`${index === 0
                  ? "w-full h-full sm:h-fit object-contain"
                  : "w-full sm:w-[50%] h-full  object-contain xl:object-cover"
                  }`}
              />
              <div
                className={`${index === 0
                  ? "mt-4"
                  : "flex flex-col gap-2 px-4 mt-4 sm:mt-0"
                  }`}
              >
                <p className="text-[#EC8000] font-inter font-semibold text-[12px]">
                  {card?.name} • {card?.date}
                </p>
                <div className="flex items-start justify-between mt-2">
                  <p
                    className={`text-[#101828] font-inter font-semibold text-[16px] ${index === 0 ? "font-syne text-[22px]" : ""
                      }`}
                  >
                    {card?.title}
                  </p>
                  {index === 0 ? (
                    <LuArrowUpRight size={22} color="#101828" />
                  ) : (
                    ""
                  )}
                </div>
                <p
                  className={`text-[#475467] ${index === 0 ? "mt-2" : "mt-2 sm:mt-0"
                    } font-inter w-[100%] font-normal text-[14px]`}
                >
                  {card?.description}
                </p>
                <div
                  className={`flex items-center ${index === 0 ? "mt-4" : "mt-4 sm:mt-0"
                    } gap-2`}
                >
                  {card && card?.length
                    ? card?.tags.map((tag, i) => (
                      <p
                        className={`rounded-full flex py-[2px] px-2 font-inter text-[12px] font-medium ${tag === "Design"
                          ? "text-[#EC8000] bg-[#FFFCF8]"
                          : tag === "Research"
                            ? "bg-[#EEF4FF] text-[#3538CD]"
                            : tag === "Presentation"
                              ? "bg-[#FDF2FA] text-[#C11574]"
                              : ""
                          }`}
                        key={i}
                      >
                        {tag}
                      </p>
                    ))
                    : null}
                </div>
              </div>
            </div>
          ))
          : null}
      </div>

      {/* {social && social?.length ? (
            social.map((partner, index) => (
          
          <div
            className={`flex cursor-pointer w-full items-start ${
              index === 0
                ? "col-span-1 sm:col-span-1 flex-col row-span-1 sm:row-span-3"
                : "col-span-1 flex-row sm:col-span-1 "
            }`}
            key={index}
          >
            <ImageView
              src={card.image}
              alt={card.name}
              width={200}
              height={200}
              className={`${
                index === 0
                  ? "w-full h-[20rem] object-cover"
                  : "w-full h-40 sm:w-full object-cover"
              }`}
            />
            <div
              className={`${index === 0 ? "mt-4" : "flex flex-col gap-2 px-4"}`}
            >
              <p className='text-[#EC8000] font-inter font-semibold text-[12px]'>
                {card?.name}
              </p>
              <div className='flex items-start justify-between mt-2'>
                <p
                  className={`text-[#101828] font-inter font-semibold text-[16px] ${
                    index === 0 ? "font-syne text-[22px]" : ""
                  }`}
                >
                  {card?.title}
                </p>
                {card?.link && <LuArrowUpRight size={22} color='#101828' />}
              </div>
              <p
                className={`text-[#475467] ${
                  index === 0 ? "mt-2" : ""
                } font-inter w-[100%] font-normal text-[14px]`}
              >
                {card?.description}
              </p>
              <div
                className={`flex items-center ${
                  index === 0 ? "mt-4" : "mt-0"
                }  gap-2`}
              >
                {card?.tags.map((tag, i) => (
                  <p
                    className={`rounded-full flex py-[2px] px-2 font-inter text-[12px] font-medium ${
                      tag === "Design"
                        ? "text-[#EC8000] bg-[#FFFCF8]"
                        : tag === "Research"
                        ? "bg-[#EEF4FF] text-[#3538CD]"
                        : tag === "Presentation"
                        ? "bg-[#FDF2FA] text-[#C11574]"
                        : ""
                    }`}
                    key={i}
                  >
                    {tag}
                  </p>
                ))}
              </div>
            </div>
          </div>
        ))
      )
    } */}

      <div className="grid items-center justify-center sm:px-[6%] 2xl:px-0 w-full grid-cols-1 gap-8 px-4 mx-auto mt-20 sm:grid-cols-2">
        {cardData?.map((data, index) => (
          <div
            className="relative w-full cursor-pointer grow"
            key={index}
            onClick={() => router.push(data?.link)}
          >
            <ImageView
              src={data?.img}
              alt="main"
              width={600}
              height={600}
              className="rounded-xl w-full h-[14rem]  object-cover"
            />
            <Link
              href={data.link}
              className="flex flex-col w-full absolute p-[2rem] pb-[4rem] sm:p-[3rem] top-[1rem]"
            >
              <div className="flex items-center justify-between">
                <p
                  className={`text-white  font-syne font-semibold text-[26px]`}
                >
                  {data?.title}
                </p>
                <LuArrowUpRight size={22} color="#fff" />
              </div>
              <p className="text-white font-inter mt-2  font-normal text-[16px]">
                {data?.description}
              </p>
            </Link>
          </div>
        ))}
      </div>
      <div className="max-w-screen-2xl mt-[3rem] xl:mt-[5rem] mx-auto px-4 sm:px-[6%] 2xl:px-0  h-fit flex flex-col gap-12 items-center justify-center w-full">
        {/* <div className="flex flex-wrap justify-center gap-4 mt-12"> */}
        <div className="flex flex-wrap justify-center gap-3 mt-12 sm:gap-7">
          {social.map((partner, index) => (
            <Link
              key={index}
              href={partner?.buttonLink}
              target={partner?.external ? "_blank" : "_self"}
            >
              <ImageView
                alt="social"
                src={partner.image}
                width={60}
                height={60}

              />
            </Link>
            //    <a
            //    href={partner?.buttonLink}
            //    target='_blank'
            //    className='cursor-pointer'
            //    key={index}
            //  >
            //    <ImageView
            //      alt='social'
            //      src={partner.image}
            //      width={40}
            //      height={40}
            //      className='w-full h-14 '
            //    />
            //  </a>
          ))}
        </div>

        <p className="text-3xl font-medium font-syne ">Join us!</p>

        {/* <button className='w-fit  text-white font-inter flex h-10 items-center justify-center rounded-md bg-[#EC8000] p-2 text-sm'>
          View Partners
        </button> */}
      </div>
      <div className=" mt-[3rem] xl:mt-[5rem] mx-auto px-4 sm:px-[6%] 2xl:px-0 h-fit flex flex-col gap-12 items-center justify-center w-full">
        <div className="relative w-full mt-12">
          <div className="w-full img-shadow" >
            <ImageView
              src={groot}
              alt="groot"
              width={800}
              height={800}
              className="w-full h-[35vh] sm:h-[50vh] rounded-md object-cover "
            />
          </div>
          <div className="absolute flex items-center justify-between w-full gap-6 px-2 py-4 sm:px-8 bottom-2 sm:bottom-4">
            <div className="flex flex-col items-start gap-2">
              <p className="text-white font-syne font-semibold text-[15px] sm:text-[28px]">
                Still have questions?
              </p>
              <p className="text-white font-inter font-normal  text-[10px] sm:text-[16px]">
                Speak to our AI Assistant here.
              </p>
            </div>
            <button>
              <Link
                className="w-[80px] sm:w-[100px]  text-white font-inter flex h-10 items-center justify-center rounded-md bg-[#EC8000] p-2 text-xs sm:text-sm"
                href={buttonConfig?.home_footer_banner?.link || ""}
                target={buttonConfig?.home_footer_banner?.external ? "_blank" : "_self"}
              >
                {buttonConfig?.home_footer_banner?.title}
              </Link>
            </button>
          </div>
        </div>
      </div>

    </div>
  );
}
